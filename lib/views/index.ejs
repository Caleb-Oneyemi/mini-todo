<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do</title>

    <style>
        body {
            background-color: antiquewhite;
        }
    
        h1 {
            text-align: center;
            font-family: "Courier New", Courier, monospace;
            color: maroon;
        }
    
        hr {
            margin: 2em;
        }
    
        .textbox {
            text-align: center;
        }
    
        .searchbox {
            padding: 1em;
            margin: 2em;
            width: 75%;
        }
    
        .input {
            padding: 1em;
            margin: 2em;
            width: 50%;
        }
    
        .btn {
            padding: 1em 2em;
            border-radius: 7px 7px 7px 7px;
            transition: all 1s;
            border: 1px solid antiquewhite;
            background-color: burlywood;
        }
    
        .btn:hover {
            transform: scale(1.1);
        }
    
        .textregion {
            border: 1px solid black;
            padding: 2em;
            margin: 0 5em;
        }
    
        .text {
            border: 1px solid black;
            background-color: white;
            margin-bottom: 1em;
            position: relative;
        }
    
        .textbtns {
            overflow: auto;
        }
    
        .textbtn {
            float: right;
            padding: 1em 2em;
            margin: 0.25em;
            border: 0;
            border-radius: 7px 7px 7px 7px;
            background-color: burlywood;
            transition: all 1s;
        }
    
        .textbtn:hover {
            transform: scale(1.1);
        }
    
        .textcontent {
            padding-left: 2em;
        }
    
        .textcontent p {
            width: 100%;
            text-align: justify;
            font-size: 1.2em;
        }
    
        .time {
            position: absolute;
            top: 8px;
            right: 16px;
            font-family: "Courier New", Courier, monospace;
        }
    </style>

</head>
<body>
    <h1>To-Do List</h1>
    
    <form action="/" method="POST">
        <div class="textbox">
            <input type="text" name="" class="searchbox" placeholder="Search">
            <br>
    
            <input type="text" name="newtodo" class="input" placeholder="Enter your text">
            <input type="submit" value="Add" class="btn" formaction="/add">
    
        </div>
    
        <hr>
    
        <div class="textregion">
            <% todos.reverse() %>
            <% todos.map(item=> { %>
                <div class="text">
                    <p class="textcontent">
                        <%= item.todo %>
                    </p>
                    <p class="time">
                        <%= item.time %>
                    </p>
                    <div class="textbtns">
                        <input type="submit" value="copy" class="textbtn copy" formaction="/copy/<%= item['_id'] %>">
                        <input type="submit" value="edit" class="textbtn edit" formaction="/edit/<%= item['_id'] %>">
                        <input type="submit" value="delete" class="textbtn delete" formaction="/delete/<%= item['_id'] %>">
                    </div>
                </div>
            <% }); %>
        </div>
    </form>

    <script>
        const searchBox = document.querySelector('.searchbox');
        const inputBox = document.querySelector('.input');
        const textRegion = document.querySelectorAll('.textregion');
        const addBtn = document.querySelector('.btn');
        let textBtns = document.querySelectorAll('.textbtn');
        let toDoBox = document.querySelectorAll('.text');


        let searchArr = [];

        searchBox.addEventListener('keyup', (e) => {
            let searchValue = e.target.value.toLowerCase().trim();

            for (let i = 0; i < toDoBox.length; i++) {
                let item = toDoBox[i].firstElementChild.innerText.toLowerCase();
                if (searchValue !== '' && item.includes(searchValue)) {
                    searchArr = [...new Set(searchArr)];
                    searchArr.push(toDoBox[i]);
                } else {
                    textRegion[0].innerHTML = 'Not Found';
                }
            }

            if (searchArr.length > 0) {
                textRegion[0].innerHTML = '';
                for (let i = 0; i < searchArr.length; i++) {
                    textRegion[0].appendChild(searchArr[i])
                }
            } else if (searchValue === '') {
                textRegion[0].innerHTML = '';
                for (let item of toDoBox) {
                    textRegion[0].appendChild(item);
                }
            }
            searchArr = [];
        })


        if (textBtns) {
            textBtns.forEach((btn) => {
                btn.addEventListener('click', (event) => {
                    let check = event.target.classList;


                    if (check.contains('copy')) {
                        let text = btn.parentNode.parentNode.firstElementChild.innerText;
                        navigator.clipboard.writeText(text);

                        event.stopImmediatePropagation();
                    }
                })
            })
        }

    </script>

</body>
</html>